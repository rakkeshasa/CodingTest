import sys

input = sys.stdin.readline
N = int(input())
num = list(map(int, input().split()))
op = list(map(int, input().split()))  # +, -, *, //

max_value = -1e9
min_value = 1e9


def dfs(depth, total, plus, minus, multi, divide):
    global max_value, min_value
    if depth == N:
        max_value = max(total, max_value)
        min_value = min(total, min_value)
        return

    if plus:
        dfs(depth + 1, total + num[depth], plus - 1, minus, multi, divide)
    if minus:
        dfs(depth + 1, total - num[depth], plus, minus - 1, multi, divide)
    if multi:
        dfs(depth + 1, total * num[depth], plus, minus, multi - 1, divide)
    if divide:
        dfs(depth + 1, int(total / num[depth]), plus, minus, multi, divide - 1)


dfs(1, num[0], op[0], op[1], op[2], op[3])
print(max_value)
print(min_value)

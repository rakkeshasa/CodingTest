import sys
input = sys.stdin.readline
infinite = int(1e9)

n, m = map(int, input().split())  # 노드의 개수, 간선의 개수
start = int(input())              # 시작 노드의 번호
graph = [[]for i in range(n+1)]   
visited = [False] * (n + 1)       # 방문 리스트 생성
distance = [infinite] * (n + 1)   # 최단 거리 리스트 무한으로 초기화

for _ in range(m):                # 간선 정보 입력 받기
  a, b, c = map(int, input().split())   # a에서 b로 가는데 c의 비용
  graph[a].append((b, c))
  
  
def closest_node():
  min_value = infinite
  index = 0        # 노드의 인덱스 선언
  
  for i in range(1, n + 1):
    if distance[i] < min_value and not visited[i]:
      min_value = distance[i]
      index = i
  return index
  
  
def digkstra(start):
  distance[start] = 0             # 시작 노드 설정
  visited[start] = True
  
  for j in graph[start]:
    distance[j[0]] = j[1]
    
  for i in range(n - 1):
    now = closest_node()          # closest_node 함수 호출  return값은 인덱스
    visited[now] = True           

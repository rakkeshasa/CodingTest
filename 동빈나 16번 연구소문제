n, m = map(int, input().split())
data = []
temp = [[0] * m for _ in range(n)]

for _ in range(n):
    data.append(list(map(int, input().split())))
    
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

result = 0

def virus(x, y):
  # 4방향으로 퍼질 곳 살펴보기
  for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]

    # x, y가 장판 범위 안에 있고, 빈 칸이라면 전염
      if nx >= 0 and nx < n and ny >= 0 and ny < m:
          if temp[nx][ny] == 0:
              temp[nx][ny] = 2
            # 전염 후 다른 곳 살펴보기
              virus(nx, ny)
                
def get_score():
  score = 0
  for i in range(n):
      for j in range(m):
          if temp[i][j] == 0:
              score += 1
  return score
                
def dfs(count):
  global result
  # 1이 3개인지 체크
  if count == 3:
      for i in range(n):
          for j in range(m):
              temp[i][j] = data[i][j]
              
      for i in range(n):
          for j in range(m):
              if temp[i][j] == 2:
                  virus(i, j)
       
      result = max(result, get_score())
      return

  # 벽을 세우는 모든 경우의 수
  for i in range(n):
      for j in range(m):
          if data[i][j] == 0:
              data[i][j] = 1
              count += 1
              dfs(count)
              data[i][j] = 0
              count -= 1
                
dfs(0)
print(result)
